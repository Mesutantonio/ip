plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'checkstyle'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    mavenCentral()
}

def fxVersion = '17.0.10'

dependencies {
    implementation "org.openjfx:javafx-controls:${fxVersion}"
    implementation "org.openjfx:javafx-fxml:${fxVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly   'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

javafx {
    version = fxVersion
    modules = ['javafx.controls', 'javafx.fxml']
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}
tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

checkstyle { toolVersion = '11.0.1' }

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("conversal.Launcher")
}

shadowJar {
    archiveBaseName = "conversal"
    archiveClassifier = null
    // helps some JavaFX services load correctly when shaded
    mergeServiceFiles()
}

run {
    standardInput = System.in
}
